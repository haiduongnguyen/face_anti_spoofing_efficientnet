import numpy as np
import os
from eer_calculation import cal_metric


def show_graph_tpr_fpr(spoof_score_txt, data_test):
    """
    spoof_score_txt is a file being generated by run evaluate
    this function take the path as input, and show result to screen
    """
    
    with open(spoof_score_txt, 'r') as f:
        spoof_score = np.array(f.read().splitlines(), dtype=np.float)
    print(spoof_score.shape)

    # test set has number live sample : 20955
    # test set has number spoof sample : 23437
    path_live = os.path.join(data_test, 'live')
    path_spoof = os.path.join(data_test, 'spoof')
    count_live = len(os.listdir(path_live))
    count_spoof = len(os.listdir(path_spoof))

    labels = np.array([0]*count_live + [1]*count_spoof, dtype=np.float)

    result_spoof = cal_metric(labels, spoof_score)
    print('eer spoof is : ' + str(result_spoof[0]) )
    print('tpr spoof is : ' + str(result_spoof[1]) )
    print('auc spoof is : ' + str(result_spoof[2]) )
    print('threshold for eer is : ' + str(result_spoof[4]) )

    # class_predcit = np.round(spoof_score)
    threshold_spoof = result_spoof[4]
    # threshold = 0.5
    class_predict = np.array(np.where(spoof_score < threshold_spoof, 0, 1))

    temp = 0
    for i in range(labels.shape[0]):
        if class_predict[i] == labels[i]:
            temp += 1

    acc = round(temp/labels.shape[0], 4)
    print(f"acc of model at threshold {threshold_spoof} is {acc}: ")


if __name__ == '__main__':
    from config import crop_data_test
    spoof_score_txt = ''
    show_graph_tpr_fpr(spoof_score_txt, crop_data_test)